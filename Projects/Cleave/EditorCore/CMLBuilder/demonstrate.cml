@ 这里是注释示范
@ 控件的{}属性相当于类的setWidgets的方法参数声明
@ 控件的标签之间传入的非控件/非布局内容会解析为控件的setUI方法，方法之间必须以分号分割，方法也只能是规定的
@ 布局的方法仅支持在布局标签中声明，目前布局标签只提供align属性，传入的是一个整数
@ 布局目前只有OptHbox和OptVbox两种，其他均为控件
@ 布局以及控件的声明以 类型 {} 方式，{}里面没有参数表示只是创建一个这样的类（相当于不带{}的类），但是id参数是独一无二的，如果没声明，
@ 将会被放在全局的id的寄存器，id寄存器在代码创建时会生成，寄存器名称都是Register，也就是说——Register是该标记语言的“关键字”
@ 同样的，布局也有对应的布局寄存器，当布局没被声明id时就会分配，该寄存器名称都是Manager，也就是说——Manager是该标记语言的另一个“关键字”
@ 控件的id不能一样（如果一样，只展示当一个id相关的控件），布局的同控件一样；但是布局和控件的id可以一样
@ children属性用于存放控件，lays属性用于多个控件，lay属性用于核心布局，wl属性用于放置控件和布局混合
AbstractWidget {
    id : 0;
    minh : 400;
    minw : 400;
    qss : "background-color : red;"
}

OptLabel {
    id : 1;
    minw : 400;
    minh : 400;
    qss : "background-color : grey;"
}

OptVbox {
    id : 2;
    align : 1;
    children : [0, 1];
}

